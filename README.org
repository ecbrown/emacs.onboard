* ðŸš€ ONBOARD â€“ Build your own vanilla Emacs

*Portable Emacs config without any 3rd-party packages*

Overwhelmed by the complexity of (excellent) Emacs starter distributions like Doom-Emacs or Spacemacs?
You want to build your Emacs config bottom-up but not forget easy-to-miss basics?

The goal of this Emacs starter kit is to offer a beginner-friendly, clean slate to build upon. It stays as close as possible to vanilla Emacs, but offers some convenience and a better user experience, without relying on other packages. It's all built-in â€“ all ONBOARD.


** Why, oh why? Yet another Emacs starter kit?

Legit question. Well, when I was setting up a VM to test some things, I wished I had a one-file-config that I can simply drop in, and have a sane environment in no time. And later then, when I was cleaning up my Emacs config, I realized that I haven't touched some parts within the last months or so. They just worked well.

So I stripped out those parts and put it all in one file, and made them my core config. Then added some grooming to make everything digestable for the public, and -- here we are.

Actually I use not only that config file, but have my Emacs config split into several libraries -- e. g. an extension layer where 3rd-party packages are configured, configs for programming languages, etc. But this is the heart piece.



** Getting started

*** Try it out (without installation)

1. Download [[https://raw.githubusercontent.com/monkeyjunglejuice/emacs.onboard/main/init-onboard.el][init-onboard.el]]
2. Open a terminal
3. Run the shell command: ~emacs -q --load /path/to/init-onboard.el~


*** Install ONBOARD by cloning the Git repository (recommended)

*1.* Clone this repository: ~git clone https://github.com/monkeyjunglejuice/emacs.onboard.git~
*2.* Put that in your Emacs init file:
#+begin_src emacs-lisp
(add-to-list 'load-path "/path/to/emacs.onboard")
(require 'init-onboard)
#+end_src
*3.* (Re)start Emacs


**** You don't have a init file or don't know where it is?

By default (freshly installed Emacs) there is no init file.
You can ask Emacs where it expects to find the init file:

"M-x describe-variable" <RET> user-init-file

Typical results:

- on Linux/Unix
  - =/home/USERNAME/.emacs=
  - =/home/USERNAME/.emacs.d/init.el= 
- on Windows
  - =c:\Users\USERNAME\AppData\Roaming\.emacs=
  - =c:\Users\USERNAME\AppData\Roaming\.emacs.d\init.el=

/The second option seems to be more commonly used./


*** Simply download and install ONBOARD without Git

1. Download [[https://raw.githubusercontent.com/monkeyjunglejuice/emacs.onboard/main/init-onboard.el][init-onboard.el]]
2. Put this in your Emacs init file: ~(require 'init-onboard "/path/to/init-onboard.el")~
3. (Re)start Emacs


** Tested with:

- [X] Emacs 27.1 on Ubuntu 20.04 LTS
- [X] Emacs 26.1 on Debian 10.9.0
- [ ] Emacs 27 on Windows 10
- [ ] Emacs 26 on Windows 10
- [ ] Emacs 27 on MacOS
- [ ] Emacs 26 on MacOS


** Getting comfortable

If you are an Emacs beginner, you will find the most tips and answers in the file itself.

The seemingly weird keybindings are not what make Emacs. They are in fact secondary. All those keybindings are just convenience shortcuts to use commands, but they are not the commands themselves. The /commands/ are the really interesting things.

What that means:


*** There are just 2 really important keybindings:

"M-x" â€” Execute a command. Press <Alt>â€“<x> to reach all available commands.

Examples:

- "M-x list-packages" Install 3rd-party packages (the "Emacs app store" or "Emacs marketplace" cough-cough)

- "M-x check-parens" Check if all parens match (in Emacs Lisp code file)

- "M-x help" to reach the ultimate help menu


*** And the other important keybinding is this:

"C-g" â€” Get out! Press <Ctrl>â€“<g> to cancel whatever happens (or hit 3x <ESC> in utter panic, which has the same effect)


** Goals

- One single file only

- Portable: Should work on recent Linux/Unix, Windows and MacOS systems; Emacs versions >= 26

- Beginner-friendly: Novice Emacs users willing to touch Elisp code should be able to follow

- Don't be invasive: Provide an Emacs config as a library; don't try to be a replacement, rather an add-on

- Use only built-in packages and features enabled by the GNU Emacs distribution's default build options

- Extendable by 3rd-party packages without interfering or breaking things

- Documentation is first class; It should be clear why something is in the code

- Modular simplicity: Code should not be intertwined, but easily modificable and separately usable

- Follow no-littering best practices (https://github.com/emacscollective/no-littering)


** Non-Goals

- Provide a whole new experience like Spacemacs or Doom-Emacs

- Pre-configure everything and the cat's pillow (if you know cats â€¦)

- New keybindings. However, they may be useful in certain circumstances.

- (Re)creating functionality where a 3rd-party package would be a better fit


** Contribution

You are welcome to contribute! Right now, I think testing on various OS is the most important thing, to detect and iron out potential issues users of other operating systems may have.
